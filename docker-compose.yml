version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: "zookeeper"
    hostname: "zookeeper"
    restart: "always"
    networks: 
      - broker-kafka
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: ${ZOOKEEPER_PORT}
        ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:${ZOOKEEPER_PORT}
        ZOOKEEPER_SERVER_ID: 1
        ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
        ZOOKEEPER_TICK_TIME: 2000
        ZOOKEEPER_INIT_LIMIT: 5
        ZOOKEEPER_SYNC_LIMIT: 5
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  kafka-node-1:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka-node-1"
    hostname: "kafka-node-1"
    restart: "no"
    ports:
      - "${KAFKA_NODE_1_PORT}:9191"
    networks: 
      - broker-kafka
    links:
      - "zookeeper:zookeeper"
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-node-1:9092,EXTERNAL://localhost:9191
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: ${GROUP_INITIAL_REBALANCE_DELAY_MS}
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
  kafka-node-2:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka-node-2"
    hostname: "kafka-node-2"
    restart: "no"
    ports:
      - "${KAFKA_NODE_2_PORT}:9192"
    networks: 
      - broker-kafka
    links:
      - "zookeeper:zookeeper"
    volumes:
      - ./data/kafka2/data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-node-2:9092,EXTERNAL://localhost:9192
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: ${GROUP_INITIAL_REBALANCE_DELAY_MS}
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
  kafka-node-3:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka-node-3"
    hostname: "kafka-node-3"
    restart: "no"
    ports:
      - "${KAFKA_NODE_3_PORT}:9193"
    networks: 
      - broker-kafka
    links:
      - "zookeeper:zookeeper"
    volumes:
      - ./data/kafka3/data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-node-3:9092,EXTERNAL://localhost:9193
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: ${GROUP_INITIAL_REBALANCE_DELAY_MS}
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: "kafdrop"
    hostname: "kafdrop"
    restart: "always"
    ports:
      - "${KAFDROP_PORT}:9000"
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    links:
      - "kafka-node-1:kafka-node-1"
      - "kafka-node-2:kafka-node-2"
      - "kafka-node-3:kafka-node-3"
    environment:
      KAFKA_BROKERCONNECT: kafka-node-1:9092,kafka-node-2:9092,kafka-node-3:9092
  haproxy-kafka:
    image: ${HAPROXY_KAFKA_NAME}:${HAPROXY_KAFKA_VERSION}
    container_name: haproxy-kafka
    hostname: haproxy-kafka
    ports:
      - "${HAPROXY_PORT}:${HAPROXY_PORT}"
      - "${HAPROXY_PORT_MANAGER}:1936"
    links:
      - "kafka-node-1:kafka-node-1"
      - "kafka-node-2:kafka-node-2"
      - "kafka-node-3:kafka-node-3"
    networks:
      - broker-kafka
networks: 
  broker-kafka:
    driver: bridge